version: "3.8"

services:
  nginx:
    build: docker/nginx
    restart: on-failure
    volumes:
      # this will mount the api folder which contains the code to the docker container
      - ${PWD}/api:/var/www/api:delegated
      # this will mount the nginx logs so that you can check the logs for errors,
      # without logging into the container
      - ${PWD}/docker/var/logs/nginx/:/var/log/nginx:delegated
      # this will create the server config to serve the api
      - ${PWD}/docker/nginx/conf.d/api.conf:/etc/nginx/conf.d/api.conf:delegated
    ports:
      - "8080:80"
    depends_on:
      - api
      - database
      - ui
    networks:
      - monitoring

  api:
    container_name: api
    build:
      context: ./docker/php-fpm
    restart: on-failure
    environment:
      APP_ENV: dev
      APP_DEBUG: 1
      PHP_DATE_TIMEZONE: ${PHP_DATE_TIMEZONE:-UTC}
      XDEBUG_CONFIG: remote_host=127.0.0.1
      PHP_IDE_CONFIG: serverName=localhost
    ports:
      - '9000:9000'
    depends_on:
      - database
    volumes:
      # this will mount the api folder which contains the code to the docker container
      - ${PWD}/api:/var/www/api:delegated
      # this will mount the custom `.ini` to the container
      - ${PWD}/docker/php-fpm/php.ini:/usr/local/etc/php/php.ini:ro
    networks:
      - monitoring

  mongodb:
    container_name: database
    image: mongo
    environment:
      - MONGO_INITDB_DATABASE=bicycle
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - ./docker/db-data:/data/db
    ports:
      - '27017-27019:27017-27019'

  ui:
    container_name: ui
    build: ./ui
    restart: on-failure
    # below line starts the project
    command: "npm start"
    depends_on:
      - api
    networks:
      - monitoring
    volumes:
      # this will mount the ui folder which contains the code to the docker container
      - ${PWD}/ui:/var/www/ui:delegated
      # this will mount the node_modules folder for faster performance
      - nodemodules:/var/www/ui/node_modules
    ports:
      - "3000:3000"

networks:
  monitoring:
    driver: bridge

volumes:
  db-data:
  var:
  nodemodules: {}